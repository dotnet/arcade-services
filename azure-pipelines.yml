# CI and PR triggers
trigger:
- master
- production
pr:
- master

# Three phases for each of the three OSes we want to run on
jobs:
- template: /eng/common/templates/job/job.yml
  parameters:
    name: Windows_NT
    enableMicrobuild: true
    enablePublishBuildArtifacts: true
    enablePublishTestResults: true
    enablePublishBuildAssets: true
    enableTelemetry: true
    helixRepo: dotnet/arcade-services
    pool:
      ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
        name: dotnet-external-temp
      ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
        name: dotnet-internal-temp
    strategy:
      matrix:
        debug_configuration:
          _BuildConfig: Debug
        release_configuration:
          _BuildConfig: Release
    steps:
    - checkout: self
      clean: true

    - task: NuGetToolInstaller@0
      inputs:
        versionSpec: 4.4.1

    - task: NuGetCommand@2
      displayName: Restore Packages
      inputs:
        command: restore
        solution: "**/*.sln"

    - script: eng\common\cibuild.cmd
        -configuration $(_BuildConfig)
        -prepareMachine
      name: Build
      displayName: Build
      condition: succeeded()

    - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
      - task: ServiceFabricUpdateManifests@2
        inputs:
          applicationPackagePath: $(Build.ArtifactStagingDirectory)\ServiceFabric\MaestroApplication\applicationpackage

      - powershell: |
          robocopy src/Maestro/MaestroApplication/PublishProfiles $(Build.ArtifactStagingDirectory)\ServiceFabric\MaestroApplication\projectartifacts\PublishProfiles /S *.xml
          robocopy src/Maestro/MaestroApplication/ApplicationParameters $(Build.ArtifactStagingDirectory)\ServiceFabric\MaestroApplication\projectartifacts\ApplicationParameters /S *.xml
          exit 0
        displayName: Copy Maestro Project Artifacts

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: $(Build.ArtifactStagingDirectory)\ServiceFabric\
          ArtifactName: Service Fabric Packages
          ArtifactType: Container
