variables:
  Build.Repository.Clean: true
  _HelixType: build/product
  _HelixSource: pr/dotnet/arcade-services/$(Build.SourceBranch)
  ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
    _TeamName: DotNetCore
    _HelixSource: official/dotnet/arcade-services/$(Build.SourceBranch)

# CI and PR triggers
trigger:
- master
pr:
- master

# Three phases for each of the three OSes we want to run on
phases:
- template: /eng/common/templates/phases/base.yml
  parameters:
    name: Windows_NT
    enableTelemetry: true
    queue:
      name: dotnet-external-temp
      parallel: 99
      matrix:
        debug_configuration:
          _BuildConfig: Debug
        release_configuration:
          _BuildConfig: Release
    steps:
    - script: eng\common\cibuild.cmd
        -configuration $(_BuildConfig)
        -prepareMachine
      name: Build
      displayName: Build
      condition: succeeded()
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs to VSTS
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)'
        PublishLocation: Container
        ArtifactName: $(Agent.Os)_$(Agent.JobName)
      continueOnError: true
      condition: always()
    - task: PublishTestResults@2
      displayName: Publish Test Results
      inputs:
        testResultsFormat: 'xUnit'
        testResultsFiles: '*.xml' 
        searchFolder: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_BuildConfig)'
      continueOnError: true
      condition: always()
      
    variables:
      _HelixBuildConfig: $(_BuildConfig)
- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
  - template: /eng/common/templates/phases/publish-build-assets.yml
    parameters:
      dependsOn:
        - Windows_NT
      queue:
        name: Hosted VS2017
