parameters:
- name: devBranchSuffix
  type: string
  default: ''
- name: dockerImageName
  type: string

steps:
- powershell: |
    Write-Host "Dev branch suffix is ${{ parameters.devBranchSuffix }}"
    $shortSha = "$(Build.SourceVersion)".Substring(0,10)
    $newDockerTag = "$(Build.BuildNumber)-$(System.JobAttempt)-$shortSha${{ parameters.devBranchSuffix }}"
    Write-Host "##vso[task.setvariable variable=newDockerImageTag;isOutput=true]$newDockerTag"
    Write-Host "set newDockerImageTag to $newDockerTag"
  displayName: Generate docker image tag
  name: DockerTag

- powershell: |
    mkdir $(Build.SourcesDirectory)/artifacts/log
    docker build . `
    -f $(Build.SourcesDirectory)/src/ProductConstructionService/ProductConstructionService.Api/Dockerfile `
    -t "${{ parameters.dockerImageName }}:$(DockerTag.newDockerImageTag)" `
    --progress=plain `
    2>&1 | tee $(Build.SourcesDirectory)/artifacts/log/docker-build.log
  displayName: Build docker image

- ${{ if notin(variables['Build.Reason'], 'PullRequest') }}:
  - task: AzureCLI@2
    inputs:
      azureSubscription: $(serviceConnectionName)
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        az acr login --name $(containerRegistryName)
        docker push "$(dockerRegistryUrl)/$(containerName):$(DockerTag.newDockerImageTag)"
    displayName: Push docker image