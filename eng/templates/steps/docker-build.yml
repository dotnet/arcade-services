parameters:
- name: devBranchSuffix
  type: string
  default: ''
- name: dockerImageName
  type: string

steps:
- bash: |
    . ./eng/common/tools.sh
    InitializeDotNetCli true
    version=$(./.dotnet/dotnet msbuild \
      ./src/ProductConstructionService/ProductConstructionService.Api/ProductConstructionService.Api.csproj \
      /p:OfficialBuild=true \
      /p:ContinuousIntegrationBuild=true \
      /p:OfficialBuildId=$(BUILD.BUILDNUMBER) \
      /p:VersionPrefix=1.1.0 \
      -getProperty:Version)
    echo "##vso[task.setvariable variable=PackageVersion;isOutput=true]$version"
    echo "set PackageVersion to $version"
  displayName: Initialize package version
  name: GetPackageVersion

- bash: |
    echo "Dev branch suffix is ${{ parameters.devBranchSuffix }}"
    shortSha=$(echo "$(Build.SourceVersion)" | cut -c1-10)
    newDockerTag="$(Build.BuildNumber)-$(System.JobAttempt)-${shortSha}${{ parameters.devBranchSuffix }}"
    newDockerTag=${newDockerTag//./}
    echo "##vso[task.setvariable variable=newDockerImageTag;isOutput=true]${newDockerTag}"
    echo "set newDockerImageTag to ${newDockerTag}"
  displayName: Generate docker image tag
  name: DockerTag

- bash: |
    mkdir -p $(Build.SourcesDirectory)/artifacts/log
    set -euo pipefail
    docker build . \
      -f $(Build.SourcesDirectory)/src/ProductConstructionService/ProductConstructionService.Api/Dockerfile \
      -t "${{ parameters.dockerImageName }}:$(DockerTag.newDockerImageTag)" \
      --build-arg PACKAGE_VERSION=$(GetPackageVersion.PackageVersion) \
      --progress=plain \
      2>&1 \
      | tee $(Build.SourcesDirectory)/artifacts/log/docker-build.log
  displayName: Build docker image
