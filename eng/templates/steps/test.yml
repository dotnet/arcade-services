steps:

- task: Powershell@2
  displayName: Install SQL Express
  inputs:
    targetType: filePath
    filePath: eng\Install-SqlExpress.ps1

- task: DotNetCoreCLI@2
  displayName: Run unit tests
  inputs:
    command: custom
    projects: |
      $(Build.SourcesDirectory)\arcade-services.sln
    custom: test
    arguments: >
      --configuration $(_BuildConfig)
      --filter "TestCategory!=PostDeployment&TestCategory!=Nightly&TestCategory!=PreDeployment"
      --no-build
      --logger "trx;LogFilePrefix=TestResults-"
      -v normal
      /bl:$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)/UnitTest.binlog
      --
      "RunConfiguration.ResultsDirectory=$(Build.ArtifactStagingDirectory)\TestResults"
      RunConfiguration.MapCpuCount=4
  env:
    NUGET_PACKAGES: $(Build.SourcesDirectory)/.packages
  condition: succeededOrFailed()

- task: PublishTestResults@2
  displayName: Publish Core Test Results
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/TestResults-*'
    searchFolder: $(Build.ArtifactStagingDirectory)\TestResults
    testRunTitle: Basic Tests
    mergeTestResults: true
    configuration: $(_BuildConfig)

- script: echo export const token = ''; > src/environments/token.ts
  workingDirectory: $(Build.SourcesDirectory)/src/Maestro/maestro-angular
  displayName: Prepare For UI Tests

- script: npm run-script test -- --watch=false --reporters progress,junit --browsers ChromeHeadless
  workingDirectory: $(Build.SourcesDirectory)/src/Maestro/maestro-angular
  displayName: Run UI Tests

- task: PublishTestResults@2
  displayName: Publish UI Test Results
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/TESTS-*.xml'
    searchFolder: $(Build.SourcesDirectory)/src/Maestro/maestro-angular
    testRunTitle: UI Tests ($(Agent.JobName))
