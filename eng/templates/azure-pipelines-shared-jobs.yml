parameters:
- name: isOfficial
  displayName: Indicates whether to use official or unofficial 1ES templates
  type: boolean
  
stages:
  - stage: Build
    dependsOn: []
    displayName: Build
    jobs:
    - template: /eng/common/templates-official/jobs/jobs.yml@self
      parameters:
        artifacts:
          publish:
            logs: true
            ${{ if in(variables['Build.SourceBranch'], 'refs/heads/main', 'refs/heads/production') }}:
              manifests: true
        enableTelemetry: true
        enableMicrobuild: false
        enablePublishTestResults: false
        enablePublishUsingPipelines: ${{ variables._PublishUsingPipelines }}
        jobs:
        - job: Windows_NT
          timeoutInMinutes: 90
          displayName: Build repository
          pool:
            name: $(DncEngInternalBuildPool)
            image: 1es-windows-2022
            os: windows
          variables:
          - group: DotNet-Symbol-Server-Pats
          - group: Publish-Build-Assets
          - _InternalBuildArgs: >
              /p:DotNetSignType=$(_SignType)
              /p:TeamName=$(_TeamName)
              /p:DotNetPublishUsingPipelines=$(_PublishUsingPipelines)
              /p:DotNetArtifactsCategory=$(_DotNetArtifactsCategory)
              /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)
              /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)
              /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
          - _BuildConfig: Release
          - _PublishType: blob
          - _SignType: test
          steps:
          - checkout: self
            clean: true
          - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/production')}}:
            - template: /eng/common/templates-official/steps/retain-build.yml@self
              parameters:
                AzdoOrgUri: $(AzdoOrgUri)
                AzdoProject: $(AzdoProject)
                BuildId: $(Build.BuildId)
          - template: /eng/templates/steps/build.yml@self
            parameters:
              configuration: $(_BuildConfig)
              buildArgs: $(_InternalBuildArgs)
          templateContext:
            outputs:
            - output: pipelineArtifact
              path: $(Build.SourcesDirectory)\artifacts\bin\ProductConstructionService.ScenarioTests\$(_BuildConfig)\net8.0\publish
              artifact: ProductConstructionService.ScenarioTests
              displayName: Publish E2E Tests
            - output: pipelineArtifact
              path: $(Build.SourcesDirectory)\artifacts\bin\ProductConstructionService.Cli\$(_BuildConfig)\net8.0
              artifact: ProductConstructionService.Cli
              displayName: Publish PCS CLI
        - job: BuildAndPublishDocker
          displayName: Build/publish docker image
          pool:
            name: NetCore1ESPool-Internal
            demands: ImageOverride -equals 1es-ubuntu-2204
            os: linux
          steps:
          - checkout: self
          - template: /eng/templates/steps/docker-build.yml@self
            parameters:
              devBranchSuffix: $(devBranchSuffix)
              dockerImageName: $(dockerRegistryUrl)/$(containerName)
          - ${{ if notin(variables['Build.Reason'], 'PullRequest') }}:
            - task: AzureCLI@2
              inputs:
                azureSubscription: $(serviceConnectionName)
                scriptType: pscore
                scriptLocation: inlineScript
                inlineScript: |
                  az acr login --name $(containerRegistryName)
                  docker push "$(dockerRegistryUrl)/$(containerName):$(DockerTag.newDockerImageTag)"
              displayName: Push docker image
  - template: /eng/templates/stages/deploy.yaml@self
    parameters:
      isProd: ${{ eq(variables['Build.SourceBranch'], 'refs/heads/production') }}
  - ${{ if in(variables['Build.SourceBranch'], 'refs/heads/main', 'refs/heads/production') }}:
      - ${{ if eq(parameters.isOfficial, true) }}:
          - template: /eng/common/templates-official/post-build/post-build.yml@self
            parameters:
              enableSymbolValidation: true
              enableSigningValidation: false
              artifactsPublishingAdditionalParameters: '/p:CheckEolTargetFramework=false'
              symbolPublishingAdditionalParameters: '/p:CheckEolTargetFramework=false'
              SDLValidationParameters:
                enable: true
                params: |
                  -SourceToolsList @("policheck","credscan")
                  -TsaInstanceURL $(_TsaInstanceURL)
                  -TsaProjectName $(_TsaProjectName)
                  -TsaNotificationEmail $(_TsaNotificationEmail)
                  -TsaCodebaseAdmin $(_TsaCodebaseAdmin)
                  -TsaBugAreaPath $(_TsaBugAreaPath)
                  -TsaIterationPath $(_TsaIterationPath)
                  -TsaRepositoryName "Arcade-Services"
                  -TsaCodebaseName "Arcade-Services"
                  -TsaPublish $True
                  -PoliCheckAdditionalRunConfigParams @("UserExclusionPath < $(Build.SourcesDirectory)/eng/PoliCheckExclusions.xml")
      - ${{ else }}:
          - template: /eng/common/templates/post-build/post-build.yml@self
            parameters:
              enableSymbolValidation: true
              enableSigningValidation: false
              artifactsPublishingAdditionalParameters: '/p:CheckEolTargetFramework=false'
              symbolPublishingAdditionalParameters: '/p:CheckEolTargetFramework=false'
              SDLValidationParameters:
                enable: true
                params: |
                  -SourceToolsList @("policheck","credscan")
                  -TsaInstanceURL $(_TsaInstanceURL)
                  -TsaProjectName $(_TsaProjectName)
                  -TsaNotificationEmail $(_TsaNotificationEmail)
                  -TsaCodebaseAdmin $(_TsaCodebaseAdmin)
                  -TsaBugAreaPath $(_TsaBugAreaPath)
                  -TsaIterationPath $(_TsaIterationPath)
                  -TsaRepositoryName "Arcade-Services"
                  -TsaCodebaseName "Arcade-Services"
                  -TsaPublish $True
                  -PoliCheckAdditionalRunConfigParams @("UserExclusionPath < $(Build.SourcesDirectory)/eng/PoliCheckExclusions.xml")
