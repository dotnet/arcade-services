{
  "meta": {
    "type": "db",
    "canSave": true,
    "canEdit": true,
    "canAdmin": true,
    "canStar": true,
    "slug": "queue-monitor-staging",
    "url": "/d/83dI-D2Zz/queue-monitor-staging",
    "expires": "0001-01-01T00:00:00Z",
    "created": "2019-12-02T18:38:35Z",
    "updated": "2019-12-02T18:38:35Z",
    "updatedBy": "Anonymous",
    "createdBy": "Anonymous",
    "version": 1,
    "hasAcl": false,
    "isFolder": false,
    "folderId": 10,
    "folderTitle": "Engineering Staging",
    "folderUrl": "/dashboards/f/xxmzSkJZk/engineering-staging",
    "provisioned": false,
    "provisionedExternalId": ""
  },
  "dashboard": {
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": "-- Grafana --",
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "gnetId": null,
    "graphTooltip": 2,
    "id": 14,
    "iteration": 1574869846878,
    "links": [],
    "panels": [
      {
        "columns": [],
        "datasource": "Kusto - engdata (Staging)",
        "fontSize": "100%",
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 0
        },
        "id": 38,
        "options": {},
        "pageSize": null,
        "showHeader": true,
        "sort": {
          "col": 0,
          "desc": true
        },
        "styles": [
          {
            "alias": "Last Heartbeat",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "link": false,
            "pattern": "Last Heartbeat",
            "type": "date"
          },
          {
            "alias": "",
            "colorMode": null,
            "colors": [
              "rgba(245, 54, 54, 0.9)",
              "rgba(237, 129, 40, 0.89)",
              "rgba(50, 172, 45, 0.97)"
            ],
            "decimals": 2,
            "pattern": "Time Since Last Heartbeat",
            "thresholds": [],
            "type": "number",
            "unit": "dthms"
          }
        ],
        "targets": [
          {
            "database": "engineeringdata",
            "query": "let lastExport = HeartbeatExport | project ExportTime | top 1 by ExportTime desc nulls last;\nHeartbeatExport\n| where ExportTime == toscalar(lastExport)\n| where (ExportTime - LastHeartbeat) > 20m\n| extend ['Time Since Last Heartbeat'] = (ExportTime - LastHeartbeat) / 1s\n| project Queue, Machine, ['Last Heartbeat'] = LastHeartbeat, ['Time Since Last Heartbeat']\n| order by Queue asc, Machine asc",
            "refId": "A",
            "resultFormat": "table"
          }
        ],
        "timeFrom": null,
        "timeShift": null,
        "title": "Machines Not Heartbeating",
        "transform": "table",
        "type": "table"
      },
      {
        "alert": {
          "alertRuleTags": {},
          "conditions": [
            {
              "evaluator": {
                "params": [
                  0
                ],
                "type": "gt"
              },
              "operator": {
                "type": "and"
              },
              "query": {
                "params": [
                  "A",
                  "5m",
                  "now"
                ]
              },
              "reducer": {
                "params": [],
                "type": "min"
              },
              "type": "query"
            }
          ],
          "executionErrorState": "alerting",
          "for": "20m",
          "frequency": "5m",
          "handler": 1,
          "message": "Staging Machines Not Heartbeating alert",
          "name": "Staging Machines Not Heartbeating alert",
          "noDataState": "keep_state",
          "notifications": [
            {
              "uid": "Tk55B9tWz"
            }
          ]
        },
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Kusto - engdata (Staging)",
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 0
        },
        "id": 40,
        "legend": {
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": false,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null as zero",
        "options": {
          "dataLinks": []
        },
        "percentage": false,
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": true,
        "steppedLine": false,
        "targets": [
          {
            "database": "engineeringdata",
            "query": "HeartbeatExport\n| where $__timeFilter(ExportTime)\n| where (ExportTime - LastHeartbeat) > 20m\n| summarize count() by ExportTime\n| order by ExportTime asc",
            "refId": "A",
            "resultFormat": "time_series"
          }
        ],
        "thresholds": [
          {
            "colorMode": "critical",
            "fill": true,
            "line": true,
            "op": "gt",
            "value": 0
          }
        ],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Machines Not Heartbeating",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": "0",
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "collapsed": false,
        "datasource": null,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 8
        },
        "id": 4,
        "panels": [],
        "repeat": "QueueName",
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "buildpool.windows.10.amd64.vs2017",
            "value": "buildpool.windows.10.amd64.vs2017"
          }
        },
        "title": "Row: $QueueName",
        "type": "row"
      },
      {
        "aliasColors": {},
        "bars": true,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Kusto - engdata (Staging)",
        "description": "",
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 9
        },
        "id": 21,
        "legend": {
          "avg": false,
          "current": false,
          "hideEmpty": false,
          "hideZero": false,
          "max": false,
          "min": false,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": false,
        "linewidth": 1,
        "nullPointMode": "null as zero",
        "options": {
          "dataLinks": []
        },
        "percentage": false,
        "pointradius": 2,
        "points": true,
        "renderer": "flot",
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "buildpool.windows.10.amd64.vs2017",
            "value": "buildpool.windows.10.amd64.vs2017"
          }
        },
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "database": "engineeringdata",
            "query": "Jobs\n| where $__timeFilter(Queued)\n| where QueueName == $QueueName\n| extend Repository = case (Repository == \"\", \"Unknown\", Repository)\n| summarize WorkItems = sum(TotalItems) by bin(Queued, $__interval), Repository\n| order by Queued asc, Repository asc",
            "refId": "C",
            "resultFormat": "time_series"
          }
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Count of WorkItems Queued by Repository",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": "",
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "AI - helix-autoscale-int",
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 12,
          "y": 9
        },
        "id": 19,
        "legend": {
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": false,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "dataLinks": []
        },
        "percentage": false,
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "buildpool.windows.10.amd64.vs2017",
            "value": "buildpool.windows.10.amd64.vs2017"
          }
        },
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "appInsights": {
              "aggOptions": [
                "avg",
                "min",
                "max",
                "sum",
                "count",
                "unique"
              ],
              "aggregation": "max",
              "dimension": "customDimensions/Queue",
              "dimensions": [
                "customEvent/name",
                "operation/name",
                "operation/synthetic",
                "operation/syntheticSource",
                "user/authenticated",
                "application/version",
                "client/type",
                "client/model",
                "client/os",
                "client/city",
                "client/stateOrProvince",
                "client/countryOrRegion",
                "client/browser",
                "cloud/roleName",
                "cloud/roleInstance",
                "customDimensions/Deployment",
                "customDimensions/State",
                "customDimensions/InvocationId",
                "customDimensions/Category",
                "customDimensions/HostInstanceId",
                "customDimensions/LogLevel",
                "customDimensions/QueueName",
                "customDimensions/Queue"
              ],
              "metricName": "customEvents/custom/QueueDepth",
              "rawQuery": true,
              "rawQueryString": "customEvents\r \n| where $__timeFilter(timestamp)\n| where name == 'QueueReport'\r\n| where tolower(tostring(customDimensions.Queue)) == '$QueueName'\n| project \r\n    timestamp, \r\n    QueueName = tolower(tostring(customDimensions.Queue)), \n    Depth = toint(customMeasurements.QueueDepth)\n| summarize Depth = max(Depth) by bin(timestamp, $__interval), QueueName \n| order by timestamp asc",
              "segmentColumn": "QueueName",
              "timeColumn": "timestamp",
              "timeGrain": "auto",
              "valueColumn": "Depth"
            },
            "azureLogAnalytics": {
              "query": "//change this example to create your own time series query\n<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)\n| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here\n| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.\n| order by TimeGenerated asc",
              "resultFormat": "time_series",
              "workspace": "b165f541-bd03-4f8d-a509-8358194e2831"
            },
            "azureMonitor": {
              "aggOptions": [],
              "dimensionFilter": "*",
              "metricDefinition": "select",
              "metricName": "select",
              "metricNamespace": "select",
              "resourceGroup": "select",
              "resourceName": "select",
              "timeGrain": "auto",
              "timeGrains": []
            },
            "queryType": "Application Insights",
            "refId": "A",
            "subscription": "68672ab8-de0c-40f1-8d1b-ffb20bd62c0f"
          }
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Queue Depth",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "decimals": 0,
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": "0",
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Kusto - engdata (Staging)",
        "description": "Calculated as the difference between WorkItem Started time minus Queued time, thus it is only sampled once a WorkItem is picked by a machine. Only WorkItems finishing on the first Attempt are counted.",
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 15
        },
        "id": 2,
        "legend": {
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": false,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "dataLinks": []
        },
        "percentage": false,
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "repeat": null,
        "repeatDirection": "v",
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "buildpool.windows.10.amd64.vs2017",
            "value": "buildpool.windows.10.amd64.vs2017"
          }
        },
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": true,
        "targets": [
          {
            "database": "engineeringdata",
            "query": "Jobs\n| where $__timeFilter(Started)\n| project Name, JobQueueName = QueueName\n| where JobQueueName in ($QueueName)\n| join kind = inner (\n    WorkItems\n    | where FriendlyName !startswith \"Orchestration\"\n    | where FriendlyName !startswith \"HelixController\"\n    | where Attempt == 1\n    | project WorkItemJobName = JobName, WorkItemName = Name, WorkItemQueued = Queued, WorkItemStarted = Started, WorkItemFinished = Finished\n    | extend WorkItemWaitTime = WorkItemStarted - WorkItemQueued\n    ) on $left.Name == $right.WorkItemJobName\n| summarize ['Wait Time'] = max(WorkItemWaitTime)/1m by bin(WorkItemStarted, $__interval)\n| order by WorkItemStarted asc",
            "refId": "A",
            "resultFormat": "time_series"
          }
        ],
        "thresholds": [
          {
            "colorMode": "warning",
            "fill": true,
            "line": true,
            "op": "gt",
            "value": 30,
            "yaxis": "left"
          },
          {
            "colorMode": "critical",
            "fill": true,
            "line": true,
            "op": "gt",
            "value": 60,
            "yaxis": "left"
          }
        ],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "WorkItem Wait Time",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "decimals": null,
            "format": "m",
            "label": "",
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "cacheTimeout": null,
        "dashLength": 10,
        "dashes": false,
        "datasource": "-- Mixed --",
        "decimals": 0,
        "description": "",
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 12,
          "y": 15
        },
        "id": 8,
        "legend": {
          "avg": false,
          "current": false,
          "hideEmpty": false,
          "hideZero": false,
          "max": false,
          "min": false,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "links": [],
        "nullPointMode": "null",
        "options": {
          "dataLinks": []
        },
        "percentage": false,
        "pluginVersion": "6.5.0-pre",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "buildpool.windows.10.amd64.vs2017",
            "value": "buildpool.windows.10.amd64.vs2017"
          }
        },
        "seriesOverrides": [
          {
            "alias": "Current Capacity",
            "stack": false
          }
        ],
        "spaceLength": 10,
        "stack": true,
        "steppedLine": false,
        "targets": [
          {
            "appInsights": {
              "aggOptions": [
                "avg",
                "min",
                "max",
                "sum",
                "count",
                "unique"
              ],
              "aggregation": "max",
              "dimension": "customDimensions/Queue",
              "dimensionFilter": "tolower(customDimensions/Queue) eq '$QueueName'",
              "dimensions": [
                "customEvent/name",
                "operation/name",
                "operation/synthetic",
                "operation/syntheticSource",
                "user/authenticated",
                "application/version",
                "client/type",
                "client/model",
                "client/os",
                "client/city",
                "client/stateOrProvince",
                "client/countryOrRegion",
                "client/browser",
                "cloud/roleName",
                "cloud/roleInstance",
                "customDimensions/State",
                "customDimensions/Deployment",
                "customDimensions/InvocationId",
                "customDimensions/Category",
                "customDimensions/HostInstanceId",
                "customDimensions/LogLevel",
                "customDimensions/Queue",
                "customDimensions/QueueName"
              ],
              "metricName": "customEvents/custom/Busy",
              "rawQuery": true,
              "rawQueryString": "customEvents\r \n| where $__timeFilter(timestamp)\n| where name == 'QueueReport'\r\n| where tolower(tostring(customDimensions.Queue)) == '$QueueName'\n| project \r\n    timestamp, \r\n    QueueName = tolower(tostring(customDimensions.Queue)), \r\n//    Offline = toint(customMeasurements.Offline), \r\n//    Initializing = toint(customMeasurements.Initializing), \r\n//    Online = toint(customMeasurements.Online), \r\n    Busy = toint(customMeasurements.Busy)\n| summarize Busy = max(Busy) by bin(timestamp, $__interval)\n| order by timestamp asc",
              "segmentColumn": "QueueName",
              "timeColumn": "timestamp",
              "timeGrain": "auto",
              "valueColumn": "Busy"
            },
            "azureLogAnalytics": {
              "query": "//change this example to create your own time series query\n<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)\n| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here\n| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.\n| order by TimeGenerated asc",
              "resultFormat": "time_series",
              "workspace": "b165f541-bd03-4f8d-a509-8358194e2831"
            },
            "azureMonitor": {
              "aggOptions": [],
              "dimensionFilter": "*",
              "metricDefinition": "select",
              "metricName": "select",
              "metricNamespace": "select",
              "resourceGroup": "select",
              "resourceName": "select",
              "timeGrain": "auto",
              "timeGrains": []
            },
            "datasource": "AI - helix-autoscale-int",
            "hide": false,
            "queryType": "Application Insights",
            "refId": "A",
            "subscription": "68672ab8-de0c-40f1-8d1b-ffb20bd62c0f"
          },
          {
            "appInsights": {
              "aggOptions": [
                "avg",
                "min",
                "max",
                "sum",
                "count",
                "unique"
              ],
              "aggregation": "max",
              "dimension": "customDimensions/Queue",
              "dimensionFilter": "customDimensions/Queue eq '$QueueName'",
              "dimensions": [
                "customEvent/name",
                "operation/name",
                "operation/synthetic",
                "operation/syntheticSource",
                "user/authenticated",
                "application/version",
                "client/type",
                "client/model",
                "client/os",
                "client/city",
                "client/stateOrProvince",
                "client/countryOrRegion",
                "client/browser",
                "cloud/roleName",
                "cloud/roleInstance",
                "customDimensions/Deployment",
                "customDimensions/State",
                "customDimensions/InvocationId",
                "customDimensions/Category",
                "customDimensions/LogLevel",
                "customDimensions/HostInstanceId",
                "customDimensions/QueueName",
                "customDimensions/Queue"
              ],
              "metricName": "customEvents/custom/Online",
              "rawQuery": true,
              "rawQueryString": "customEvents\r \n| where $__timeFilter(timestamp)\n| where name == 'QueueReport'\r\n| where tolower(tostring(customDimensions.Queue)) == '$QueueName'\n| project \r\n    timestamp, \r\n    QueueName = tolower(tostring(customDimensions.Queue)), \r\n    Online = toint(customMeasurements.Online),\n    Busy = toint(customMeasurements.Busy)\n| summarize arg_max(Busy, Online) by bin(timestamp, $__interval)\n| project-away Busy\n| order by timestamp asc",
              "segmentColumn": "QueueName",
              "timeColumn": "timestamp",
              "timeGrain": "auto",
              "timeGrainCount": "",
              "timeGrainType": "auto",
              "timeGrainUnit": "",
              "valueColumn": "Online"
            },
            "azureLogAnalytics": {
              "query": "//change this example to create your own time series query\n<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)\n| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here\n| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.\n| order by TimeGenerated asc",
              "resultFormat": "time_series",
              "workspace": "b165f541-bd03-4f8d-a509-8358194e2831"
            },
            "azureMonitor": {
              "aggOptions": [],
              "dimensionFilter": "*",
              "metricDefinition": "select",
              "metricName": "select",
              "metricNamespace": "select",
              "resourceGroup": "select",
              "resourceName": "select",
              "timeGrain": "auto",
              "timeGrains": []
            },
            "datasource": "AI - helix-autoscale-int",
            "hide": false,
            "queryType": "Application Insights",
            "refId": "B",
            "subscription": "68672ab8-de0c-40f1-8d1b-ffb20bd62c0f"
          },
          {
            "appInsights": {
              "dimension": "none",
              "metricName": "select",
              "rawQuery": true,
              "rawQueryString": "customEvents\r \n| where $__timeFilter(timestamp)\n| where name == 'QueueReport'\r\n| where tolower(tostring(customDimensions.Queue)) == '$QueueName'\n| project \r\n    timestamp, \r\n    QueueName = tolower(tostring(customDimensions.Queue)), \r\n    Initializing = toint(customMeasurements.Initializing),\n    Busy = toint(customMeasurements.Busy)\n| summarize arg_max(Busy, Initializing) by bin(timestamp, $__interval)\n| project-away Busy\n| order by timestamp asc",
              "segmentColumn": "QueueName",
              "timeColumn": "timestamp",
              "timeGrain": "auto",
              "valueColumn": "Initializing"
            },
            "azureLogAnalytics": {
              "query": "//change this example to create your own time series query\n<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)\n| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here\n| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.\n| order by TimeGenerated asc",
              "resultFormat": "time_series",
              "workspace": "b165f541-bd03-4f8d-a509-8358194e2831"
            },
            "azureMonitor": {
              "aggOptions": [],
              "dimensionFilter": "*",
              "metricDefinition": "select",
              "metricName": "select",
              "metricNamespace": "select",
              "resourceGroup": "select",
              "resourceName": "select",
              "timeGrain": "auto",
              "timeGrains": []
            },
            "datasource": "AI - helix-autoscale-int",
            "hide": false,
            "queryType": "Application Insights",
            "refId": "C",
            "subscription": "68672ab8-de0c-40f1-8d1b-ffb20bd62c0f"
          },
          {
            "appInsights": {
              "dimension": "none",
              "metricName": "select",
              "rawQuery": true,
              "rawQueryString": "customEvents\r \n| where $__timeFilter(timestamp)\n| where name == 'AutoScaleReport'\r\n| where tolower(tostring(customDimensions.QueueName)) == '$QueueName'\n| project \r\n    timestamp, \r\n    QueueName = tolower(tostring(customDimensions.QueueName)), \r\n    ['Current Capacity']= toint(customMeasurements.CurrentCapacity)\n| summarize ['Current Capacity']= max(['Current Capacity']) by bin(timestamp, $__interval)\n| order by timestamp asc",
              "timeColumn": "timestamp",
              "timeGrain": "auto",
              "valueColumn": "Current Capacity"
            },
            "azureLogAnalytics": {
              "query": "//change this example to create your own time series query\n<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)\n| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here\n| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.\n| order by TimeGenerated asc",
              "resultFormat": "time_series",
              "workspace": "b165f541-bd03-4f8d-a509-8358194e2831"
            },
            "azureMonitor": {
              "aggOptions": [],
              "dimensionFilter": "*",
              "metricDefinition": "select",
              "metricName": "select",
              "metricNamespace": "select",
              "resourceGroup": "select",
              "resourceName": "select",
              "timeGrain": "auto",
              "timeGrains": []
            },
            "datasource": "AI - helix-autoscale-int",
            "hide": false,
            "queryType": "Application Insights",
            "refId": "D",
            "subscription": "68672ab8-de0c-40f1-8d1b-ffb20bd62c0f"
          },
          {
            "database": "engineeringdata",
            "datasource": "Kusto - engdata (Staging)",
            "hide": true,
            "query": "HeartbeatExport\n| where $__timeFilter(ExportTime)\n| where MachineState == 'Online'\n| where tolower(Queue) == $QueueName\n| summarize Online = count() by ExportTime\n| order by ExportTime asc",
            "refId": "E",
            "resultFormat": "time_series"
          },
          {
            "database": "engineeringdata",
            "datasource": "Kusto - engdata (Staging)",
            "hide": true,
            "query": "HeartbeatExport\n| where $__timeFilter(ExportTime)\n| where MachineState == 'Busy'\n| where tolower(Queue) == $QueueName\n| summarize Busy = count() by ExportTime\n| order by ExportTime asc",
            "refId": "F",
            "resultFormat": "time_series"
          },
          {
            "database": "engineeringdata",
            "datasource": "Kusto - engdata (Staging)",
            "hide": true,
            "query": "HeartbeatExport\n| where $__timeFilter(ExportTime)\n| where MachineState == 'Initializing'\n| where tolower(Queue) == $QueueName\n| summarize Initializing = count() by ExportTime\n| order by ExportTime asc",
            "refId": "G",
            "resultFormat": "time_series"
          },
          {
            "database": "engineeringdata",
            "datasource": "Kusto - engdata (Staging)",
            "hide": true,
            "query": "HeartbeatExport\n| where $__timeFilter(ExportTime)\n| where MachineState == 'Offline'\n| where tolower(Queue) == $QueueName\n| summarize Offline = count() by ExportTime\n| order by ExportTime asc",
            "refId": "H",
            "resultFormat": "time_series"
          }
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Machine Status",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "decimals": 0,
            "format": "short",
            "label": "",
            "logBase": 1,
            "max": null,
            "min": "0",
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": 5
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Kusto - engdata (Staging)",
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 21
        },
        "id": 52,
        "legend": {
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": false,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "dataLinks": []
        },
        "percentage": false,
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "buildpool.windows.10.amd64.open",
            "value": "buildpool.windows.10.amd64.open"
          }
        },
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": true,
        "targets": [
          {
            "database": "engineeringdata",
            "query": "Jobs\n| where $__timeFilter(Started)\n| project Name, JobQueueName = QueueName\n| where JobQueueName in ($QueueName)\n| join kind = inner (\n    WorkItems\n    | where FriendlyName !startswith \"Orchestration\"\n    | where FriendlyName !startswith \"HelixController\"\n    | where Attempt > 1\n    | project WorkItemJobName = JobName, WorkItemName = Name, WorkItemStarted = Started, Attempt\n    ) on $left.Name == $right.WorkItemJobName\n| project-rename Timestamp = WorkItemStarted\n| make-series ['Attempt Count'] = count(Attempt) default = 0 on Timestamp from $__timeFrom to $__timeTo step $__interval",
            "refId": "A",
            "resultFormat": "time_series_adx_series"
          }
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "WorkItem Re-delivery Count",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": "0",
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "collapsed": false,
        "datasource": null,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 27
        },
        "id": 41,
        "panels": [],
        "repeat": null,
        "repeatIteration": 1574869846878,
        "repeatPanelId": 4,
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "ubuntu.1604.arm64.docker.open",
            "value": "ubuntu.1604.arm64.docker.open"
          }
        },
        "title": "Row: $QueueName",
        "type": "row"
      },
      {
        "aliasColors": {},
        "bars": true,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Kusto - engdata (Staging)",
        "description": "",
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 28
        },
        "id": 42,
        "legend": {
          "avg": false,
          "current": false,
          "hideEmpty": false,
          "hideZero": false,
          "max": false,
          "min": false,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": false,
        "linewidth": 1,
        "nullPointMode": "null as zero",
        "options": {
          "dataLinks": []
        },
        "percentage": false,
        "pointradius": 2,
        "points": true,
        "renderer": "flot",
        "repeatIteration": 1574869846878,
        "repeatPanelId": 21,
        "repeatedByRow": true,
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "ubuntu.1604.arm64.docker.open",
            "value": "ubuntu.1604.arm64.docker.open"
          }
        },
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "database": "engineeringdata",
            "query": "Jobs\n| where $__timeFilter(Queued)\n| where QueueName == $QueueName\n| extend Repository = case (Repository == \"\", \"Unknown\", Repository)\n| summarize WorkItems = sum(TotalItems) by bin(Queued, $__interval), Repository\n| order by Queued asc, Repository asc",
            "refId": "C",
            "resultFormat": "time_series"
          }
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Count of WorkItems Queued by Repository",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": "",
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "AI - helix-autoscale-int",
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 12,
          "y": 28
        },
        "id": 43,
        "legend": {
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": false,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "dataLinks": []
        },
        "percentage": false,
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "repeatIteration": 1574869846878,
        "repeatPanelId": 19,
        "repeatedByRow": true,
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "ubuntu.1604.arm64.docker.open",
            "value": "ubuntu.1604.arm64.docker.open"
          }
        },
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "appInsights": {
              "aggOptions": [
                "avg",
                "min",
                "max",
                "sum",
                "count",
                "unique"
              ],
              "aggregation": "max",
              "dimension": "customDimensions/Queue",
              "dimensions": [
                "customEvent/name",
                "operation/name",
                "operation/synthetic",
                "operation/syntheticSource",
                "user/authenticated",
                "application/version",
                "client/type",
                "client/model",
                "client/os",
                "client/city",
                "client/stateOrProvince",
                "client/countryOrRegion",
                "client/browser",
                "cloud/roleName",
                "cloud/roleInstance",
                "customDimensions/Deployment",
                "customDimensions/State",
                "customDimensions/InvocationId",
                "customDimensions/Category",
                "customDimensions/HostInstanceId",
                "customDimensions/LogLevel",
                "customDimensions/QueueName",
                "customDimensions/Queue"
              ],
              "metricName": "customEvents/custom/QueueDepth",
              "rawQuery": true,
              "rawQueryString": "customEvents\r \n| where $__timeFilter(timestamp)\n| where name == 'QueueReport'\r\n| where tolower(tostring(customDimensions.Queue)) == '$QueueName'\n| project \r\n    timestamp, \r\n    QueueName = tolower(tostring(customDimensions.Queue)), \n    Depth = toint(customMeasurements.QueueDepth)\n| summarize Depth = max(Depth) by bin(timestamp, $__interval), QueueName \n| order by timestamp asc",
              "segmentColumn": "QueueName",
              "timeColumn": "timestamp",
              "timeGrain": "auto",
              "valueColumn": "Depth"
            },
            "azureLogAnalytics": {
              "query": "//change this example to create your own time series query\n<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)\n| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here\n| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.\n| order by TimeGenerated asc",
              "resultFormat": "time_series",
              "workspace": "b165f541-bd03-4f8d-a509-8358194e2831"
            },
            "azureMonitor": {
              "aggOptions": [],
              "dimensionFilter": "*",
              "metricDefinition": "select",
              "metricName": "select",
              "metricNamespace": "select",
              "resourceGroup": "select",
              "resourceName": "select",
              "timeGrain": "auto",
              "timeGrains": []
            },
            "queryType": "Application Insights",
            "refId": "A",
            "subscription": "68672ab8-de0c-40f1-8d1b-ffb20bd62c0f"
          }
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Queue Depth",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "decimals": 0,
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": "0",
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Kusto - engdata (Staging)",
        "description": "Calculated as the difference between WorkItem Started time minus Queued time, thus it is only sampled once a WorkItem is picked by a machine.",
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 34
        },
        "id": 44,
        "legend": {
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": false,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "dataLinks": []
        },
        "percentage": false,
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "repeat": null,
        "repeatDirection": "v",
        "repeatIteration": 1574869846878,
        "repeatPanelId": 2,
        "repeatedByRow": true,
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "ubuntu.1604.arm64.docker.open",
            "value": "ubuntu.1604.arm64.docker.open"
          }
        },
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": true,
        "targets": [
          {
            "database": "engineeringdata",
            "query": "Jobs\n| where $__timeFilter(Started)\n| project Name, JobQueueName = QueueName\n| where JobQueueName in ($QueueName)\n| join kind = inner (\n    WorkItems\n    | where FriendlyName !startswith \"Orchestration\"\n    | where FriendlyName !startswith \"HelixController\"\n    | project WorkItemJobName = JobName, WorkItemName = Name, WorkItemQueued = Queued, WorkItemStarted = Started, WorkItemFinished = Finished\n    | extend WorkItemWaitTime = WorkItemStarted - WorkItemQueued\n    ) on $left.Name == $right.WorkItemJobName\n| summarize ['Wait Time'] = max(WorkItemWaitTime)/1m by bin(WorkItemStarted, $__interval)\n| order by WorkItemStarted asc",
            "refId": "A",
            "resultFormat": "time_series"
          }
        ],
        "thresholds": [
          {
            "colorMode": "warning",
            "fill": true,
            "line": true,
            "op": "gt",
            "value": 30,
            "yaxis": "left"
          },
          {
            "colorMode": "critical",
            "fill": true,
            "line": true,
            "op": "gt",
            "value": 60,
            "yaxis": "left"
          }
        ],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "WorkItem Wait Time",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "decimals": null,
            "format": "m",
            "label": "",
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "cacheTimeout": null,
        "dashLength": 10,
        "dashes": false,
        "datasource": "-- Mixed --",
        "decimals": 0,
        "description": "",
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 12,
          "y": 34
        },
        "id": 45,
        "legend": {
          "avg": false,
          "current": false,
          "hideEmpty": false,
          "hideZero": false,
          "max": false,
          "min": false,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "links": [],
        "nullPointMode": "null",
        "options": {
          "dataLinks": []
        },
        "percentage": false,
        "pluginVersion": "6.5.0-pre",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "repeatIteration": 1574869846878,
        "repeatPanelId": 8,
        "repeatedByRow": true,
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "ubuntu.1604.arm64.docker.open",
            "value": "ubuntu.1604.arm64.docker.open"
          }
        },
        "seriesOverrides": [
          {
            "alias": "Current Capacity",
            "stack": false
          }
        ],
        "spaceLength": 10,
        "stack": true,
        "steppedLine": false,
        "targets": [
          {
            "appInsights": {
              "aggOptions": [
                "avg",
                "min",
                "max",
                "sum",
                "count",
                "unique"
              ],
              "aggregation": "max",
              "dimension": "customDimensions/Queue",
              "dimensionFilter": "tolower(customDimensions/Queue) eq '$QueueName'",
              "dimensions": [
                "customEvent/name",
                "operation/name",
                "operation/synthetic",
                "operation/syntheticSource",
                "user/authenticated",
                "application/version",
                "client/type",
                "client/model",
                "client/os",
                "client/city",
                "client/stateOrProvince",
                "client/countryOrRegion",
                "client/browser",
                "cloud/roleName",
                "cloud/roleInstance",
                "customDimensions/State",
                "customDimensions/Deployment",
                "customDimensions/InvocationId",
                "customDimensions/Category",
                "customDimensions/HostInstanceId",
                "customDimensions/LogLevel",
                "customDimensions/Queue",
                "customDimensions/QueueName"
              ],
              "metricName": "customEvents/custom/Busy",
              "rawQuery": true,
              "rawQueryString": "customEvents\r \n| where $__timeFilter(timestamp)\n| where name == 'QueueReport'\r\n| where tolower(tostring(customDimensions.Queue)) == '$QueueName'\n| project \r\n    timestamp, \r\n    QueueName = tolower(tostring(customDimensions.Queue)), \r\n//    Offline = toint(customMeasurements.Offline), \r\n//    Initializing = toint(customMeasurements.Initializing), \r\n//    Online = toint(customMeasurements.Online), \r\n    Busy = toint(customMeasurements.Busy)\n| summarize Busy = max(Busy) by bin(timestamp, $__interval)\n| order by timestamp asc",
              "segmentColumn": "QueueName",
              "timeColumn": "timestamp",
              "timeGrain": "auto",
              "valueColumn": "Busy"
            },
            "azureLogAnalytics": {
              "query": "//change this example to create your own time series query\n<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)\n| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here\n| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.\n| order by TimeGenerated asc",
              "resultFormat": "time_series",
              "workspace": "b165f541-bd03-4f8d-a509-8358194e2831"
            },
            "azureMonitor": {
              "aggOptions": [],
              "dimensionFilter": "*",
              "metricDefinition": "select",
              "metricName": "select",
              "metricNamespace": "select",
              "resourceGroup": "select",
              "resourceName": "select",
              "timeGrain": "auto",
              "timeGrains": []
            },
            "datasource": "AI - helix-autoscale-int",
            "hide": false,
            "queryType": "Application Insights",
            "refId": "A",
            "subscription": "68672ab8-de0c-40f1-8d1b-ffb20bd62c0f"
          },
          {
            "appInsights": {
              "aggOptions": [
                "avg",
                "min",
                "max",
                "sum",
                "count",
                "unique"
              ],
              "aggregation": "max",
              "dimension": "customDimensions/Queue",
              "dimensionFilter": "customDimensions/Queue eq '$QueueName'",
              "dimensions": [
                "customEvent/name",
                "operation/name",
                "operation/synthetic",
                "operation/syntheticSource",
                "user/authenticated",
                "application/version",
                "client/type",
                "client/model",
                "client/os",
                "client/city",
                "client/stateOrProvince",
                "client/countryOrRegion",
                "client/browser",
                "cloud/roleName",
                "cloud/roleInstance",
                "customDimensions/Deployment",
                "customDimensions/State",
                "customDimensions/InvocationId",
                "customDimensions/Category",
                "customDimensions/LogLevel",
                "customDimensions/HostInstanceId",
                "customDimensions/QueueName",
                "customDimensions/Queue"
              ],
              "metricName": "customEvents/custom/Online",
              "rawQuery": true,
              "rawQueryString": "customEvents\r \n| where $__timeFilter(timestamp)\n| where name == 'QueueReport'\r\n| where tolower(tostring(customDimensions.Queue)) == '$QueueName'\n| project \r\n    timestamp, \r\n    QueueName = tolower(tostring(customDimensions.Queue)), \r\n    Online = toint(customMeasurements.Online),\n    Busy = toint(customMeasurements.Busy)\n| summarize arg_max(Busy, Online) by bin(timestamp, $__interval)\n| project-away Busy\n| order by timestamp asc",
              "segmentColumn": "QueueName",
              "timeColumn": "timestamp",
              "timeGrain": "auto",
              "timeGrainCount": "",
              "timeGrainType": "auto",
              "timeGrainUnit": "",
              "valueColumn": "Online"
            },
            "azureLogAnalytics": {
              "query": "//change this example to create your own time series query\n<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)\n| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here\n| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.\n| order by TimeGenerated asc",
              "resultFormat": "time_series",
              "workspace": "b165f541-bd03-4f8d-a509-8358194e2831"
            },
            "azureMonitor": {
              "aggOptions": [],
              "dimensionFilter": "*",
              "metricDefinition": "select",
              "metricName": "select",
              "metricNamespace": "select",
              "resourceGroup": "select",
              "resourceName": "select",
              "timeGrain": "auto",
              "timeGrains": []
            },
            "datasource": "AI - helix-autoscale-int",
            "hide": false,
            "queryType": "Application Insights",
            "refId": "B",
            "subscription": "68672ab8-de0c-40f1-8d1b-ffb20bd62c0f"
          },
          {
            "appInsights": {
              "dimension": "none",
              "metricName": "select",
              "rawQuery": true,
              "rawQueryString": "customEvents\r \n| where $__timeFilter(timestamp)\n| where name == 'QueueReport'\r\n| where tolower(tostring(customDimensions.Queue)) == '$QueueName'\n| project \r\n    timestamp, \r\n    QueueName = tolower(tostring(customDimensions.Queue)), \r\n    Initializing = toint(customMeasurements.Initializing),\n    Busy = toint(customMeasurements.Busy)\n| summarize arg_max(Busy, Initializing) by bin(timestamp, $__interval)\n| project-away Busy\n| order by timestamp asc",
              "segmentColumn": "QueueName",
              "timeColumn": "timestamp",
              "timeGrain": "auto",
              "valueColumn": "Initializing"
            },
            "azureLogAnalytics": {
              "query": "//change this example to create your own time series query\n<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)\n| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here\n| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.\n| order by TimeGenerated asc",
              "resultFormat": "time_series",
              "workspace": "b165f541-bd03-4f8d-a509-8358194e2831"
            },
            "azureMonitor": {
              "aggOptions": [],
              "dimensionFilter": "*",
              "metricDefinition": "select",
              "metricName": "select",
              "metricNamespace": "select",
              "resourceGroup": "select",
              "resourceName": "select",
              "timeGrain": "auto",
              "timeGrains": []
            },
            "datasource": "AI - helix-autoscale-int",
            "hide": false,
            "queryType": "Application Insights",
            "refId": "C",
            "subscription": "68672ab8-de0c-40f1-8d1b-ffb20bd62c0f"
          },
          {
            "appInsights": {
              "dimension": "none",
              "metricName": "select",
              "rawQuery": true,
              "rawQueryString": "customEvents\r \n| where $__timeFilter(timestamp)\n| where name == 'AutoScaleReport'\r\n| where tolower(tostring(customDimensions.QueueName)) == '$QueueName'\n| project \r\n    timestamp, \r\n    QueueName = tolower(tostring(customDimensions.QueueName)), \r\n    ['Current Capacity']= toint(customMeasurements.CurrentCapacity)\n| summarize ['Current Capacity']= max(['Current Capacity']) by bin(timestamp, $__interval)\n| order by timestamp asc",
              "timeColumn": "timestamp",
              "timeGrain": "auto",
              "valueColumn": "Current Capacity"
            },
            "azureLogAnalytics": {
              "query": "//change this example to create your own time series query\n<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)\n| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here\n| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.\n| order by TimeGenerated asc",
              "resultFormat": "time_series",
              "workspace": "b165f541-bd03-4f8d-a509-8358194e2831"
            },
            "azureMonitor": {
              "aggOptions": [],
              "dimensionFilter": "*",
              "metricDefinition": "select",
              "metricName": "select",
              "metricNamespace": "select",
              "resourceGroup": "select",
              "resourceName": "select",
              "timeGrain": "auto",
              "timeGrains": []
            },
            "datasource": "AI - helix-autoscale-int",
            "hide": false,
            "queryType": "Application Insights",
            "refId": "D",
            "subscription": "68672ab8-de0c-40f1-8d1b-ffb20bd62c0f"
          },
          {
            "database": "engineeringdata",
            "datasource": "Kusto - engdata (Staging)",
            "hide": true,
            "query": "HeartbeatExport\n| where $__timeFilter(ExportTime)\n| where MachineState == 'Online'\n| where tolower(Queue) == $QueueName\n| summarize Online = count() by ExportTime\n| order by ExportTime asc",
            "refId": "E",
            "resultFormat": "time_series"
          },
          {
            "database": "engineeringdata",
            "datasource": "Kusto - engdata (Staging)",
            "hide": true,
            "query": "HeartbeatExport\n| where $__timeFilter(ExportTime)\n| where MachineState == 'Busy'\n| where tolower(Queue) == $QueueName\n| summarize Busy = count() by ExportTime\n| order by ExportTime asc",
            "refId": "F",
            "resultFormat": "time_series"
          },
          {
            "database": "engineeringdata",
            "datasource": "Kusto - engdata (Staging)",
            "hide": true,
            "query": "HeartbeatExport\n| where $__timeFilter(ExportTime)\n| where MachineState == 'Initializing'\n| where tolower(Queue) == $QueueName\n| summarize Initializing = count() by ExportTime\n| order by ExportTime asc",
            "refId": "G",
            "resultFormat": "time_series"
          },
          {
            "database": "engineeringdata",
            "datasource": "Kusto - engdata (Staging)",
            "hide": true,
            "query": "HeartbeatExport\n| where $__timeFilter(ExportTime)\n| where MachineState == 'Offline'\n| where tolower(Queue) == $QueueName\n| summarize Offline = count() by ExportTime\n| order by ExportTime asc",
            "refId": "H",
            "resultFormat": "time_series"
          }
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Machine Status",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "decimals": 0,
            "format": "short",
            "label": "",
            "logBase": 1,
            "max": null,
            "min": "0",
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": 5
        }
      },
      {
        "collapsed": false,
        "datasource": null,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 40
        },
        "id": 46,
        "panels": [],
        "repeat": null,
        "repeatIteration": 1574869846878,
        "repeatPanelId": 4,
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "windows.10.amd64.open",
            "value": "windows.10.amd64.open"
          }
        },
        "title": "Row: $QueueName",
        "type": "row"
      },
      {
        "aliasColors": {},
        "bars": true,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Kusto - engdata (Staging)",
        "description": "",
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 41
        },
        "id": 47,
        "legend": {
          "avg": false,
          "current": false,
          "hideEmpty": false,
          "hideZero": false,
          "max": false,
          "min": false,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": false,
        "linewidth": 1,
        "nullPointMode": "null as zero",
        "options": {
          "dataLinks": []
        },
        "percentage": false,
        "pointradius": 2,
        "points": true,
        "renderer": "flot",
        "repeatIteration": 1574869846878,
        "repeatPanelId": 21,
        "repeatedByRow": true,
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "windows.10.amd64.open",
            "value": "windows.10.amd64.open"
          }
        },
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "database": "engineeringdata",
            "query": "Jobs\n| where $__timeFilter(Queued)\n| where QueueName == $QueueName\n| extend Repository = case (Repository == \"\", \"Unknown\", Repository)\n| summarize WorkItems = sum(TotalItems) by bin(Queued, $__interval), Repository\n| order by Queued asc, Repository asc",
            "refId": "C",
            "resultFormat": "time_series"
          }
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Count of WorkItems Queued by Repository",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": "",
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "AI - helix-autoscale-int",
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 12,
          "y": 41
        },
        "id": 48,
        "legend": {
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": false,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "dataLinks": []
        },
        "percentage": false,
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "repeatIteration": 1574869846878,
        "repeatPanelId": 19,
        "repeatedByRow": true,
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "windows.10.amd64.open",
            "value": "windows.10.amd64.open"
          }
        },
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "appInsights": {
              "aggOptions": [
                "avg",
                "min",
                "max",
                "sum",
                "count",
                "unique"
              ],
              "aggregation": "max",
              "dimension": "customDimensions/Queue",
              "dimensions": [
                "customEvent/name",
                "operation/name",
                "operation/synthetic",
                "operation/syntheticSource",
                "user/authenticated",
                "application/version",
                "client/type",
                "client/model",
                "client/os",
                "client/city",
                "client/stateOrProvince",
                "client/countryOrRegion",
                "client/browser",
                "cloud/roleName",
                "cloud/roleInstance",
                "customDimensions/Deployment",
                "customDimensions/State",
                "customDimensions/InvocationId",
                "customDimensions/Category",
                "customDimensions/HostInstanceId",
                "customDimensions/LogLevel",
                "customDimensions/QueueName",
                "customDimensions/Queue"
              ],
              "metricName": "customEvents/custom/QueueDepth",
              "rawQuery": true,
              "rawQueryString": "customEvents\r \n| where $__timeFilter(timestamp)\n| where name == 'QueueReport'\r\n| where tolower(tostring(customDimensions.Queue)) == '$QueueName'\n| project \r\n    timestamp, \r\n    QueueName = tolower(tostring(customDimensions.Queue)), \n    Depth = toint(customMeasurements.QueueDepth)\n| summarize Depth = max(Depth) by bin(timestamp, $__interval), QueueName \n| order by timestamp asc",
              "segmentColumn": "QueueName",
              "timeColumn": "timestamp",
              "timeGrain": "auto",
              "valueColumn": "Depth"
            },
            "azureLogAnalytics": {
              "query": "//change this example to create your own time series query\n<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)\n| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here\n| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.\n| order by TimeGenerated asc",
              "resultFormat": "time_series",
              "workspace": "b165f541-bd03-4f8d-a509-8358194e2831"
            },
            "azureMonitor": {
              "aggOptions": [],
              "dimensionFilter": "*",
              "metricDefinition": "select",
              "metricName": "select",
              "metricNamespace": "select",
              "resourceGroup": "select",
              "resourceName": "select",
              "timeGrain": "auto",
              "timeGrains": []
            },
            "queryType": "Application Insights",
            "refId": "A",
            "subscription": "68672ab8-de0c-40f1-8d1b-ffb20bd62c0f"
          }
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Queue Depth",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "decimals": 0,
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": "0",
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Kusto - engdata (Staging)",
        "description": "Calculated as the difference between WorkItem Started time minus Queued time, thus it is only sampled once a WorkItem is picked by a machine.",
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 47
        },
        "id": 49,
        "legend": {
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": false,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "dataLinks": []
        },
        "percentage": false,
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "repeat": null,
        "repeatDirection": "v",
        "repeatIteration": 1574869846878,
        "repeatPanelId": 2,
        "repeatedByRow": true,
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "windows.10.amd64.open",
            "value": "windows.10.amd64.open"
          }
        },
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": true,
        "targets": [
          {
            "database": "engineeringdata",
            "query": "Jobs\n| where $__timeFilter(Started)\n| project Name, JobQueueName = QueueName\n| where JobQueueName in ($QueueName)\n| join kind = inner (\n    WorkItems\n    | where FriendlyName !startswith \"Orchestration\"\n    | where FriendlyName !startswith \"HelixController\"\n    | project WorkItemJobName = JobName, WorkItemName = Name, WorkItemQueued = Queued, WorkItemStarted = Started, WorkItemFinished = Finished\n    | extend WorkItemWaitTime = WorkItemStarted - WorkItemQueued\n    ) on $left.Name == $right.WorkItemJobName\n| summarize ['Wait Time'] = max(WorkItemWaitTime)/1m by bin(WorkItemStarted, $__interval)\n| order by WorkItemStarted asc",
            "refId": "A",
            "resultFormat": "time_series"
          }
        ],
        "thresholds": [
          {
            "colorMode": "warning",
            "fill": true,
            "line": true,
            "op": "gt",
            "value": 30,
            "yaxis": "left"
          },
          {
            "colorMode": "critical",
            "fill": true,
            "line": true,
            "op": "gt",
            "value": 60,
            "yaxis": "left"
          }
        ],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "WorkItem Wait Time",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "decimals": null,
            "format": "m",
            "label": "",
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "cacheTimeout": null,
        "dashLength": 10,
        "dashes": false,
        "datasource": "-- Mixed --",
        "decimals": 0,
        "description": "",
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 12,
          "y": 47
        },
        "id": 50,
        "legend": {
          "avg": false,
          "current": false,
          "hideEmpty": false,
          "hideZero": false,
          "max": false,
          "min": false,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "links": [],
        "nullPointMode": "null",
        "options": {
          "dataLinks": []
        },
        "percentage": false,
        "pluginVersion": "6.5.0-pre",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "repeatIteration": 1574869846878,
        "repeatPanelId": 8,
        "repeatedByRow": true,
        "scopedVars": {
          "QueueName": {
            "selected": true,
            "text": "windows.10.amd64.open",
            "value": "windows.10.amd64.open"
          }
        },
        "seriesOverrides": [
          {
            "alias": "Current Capacity",
            "stack": false
          }
        ],
        "spaceLength": 10,
        "stack": true,
        "steppedLine": false,
        "targets": [
          {
            "appInsights": {
              "aggOptions": [
                "avg",
                "min",
                "max",
                "sum",
                "count",
                "unique"
              ],
              "aggregation": "max",
              "dimension": "customDimensions/Queue",
              "dimensionFilter": "tolower(customDimensions/Queue) eq '$QueueName'",
              "dimensions": [
                "customEvent/name",
                "operation/name",
                "operation/synthetic",
                "operation/syntheticSource",
                "user/authenticated",
                "application/version",
                "client/type",
                "client/model",
                "client/os",
                "client/city",
                "client/stateOrProvince",
                "client/countryOrRegion",
                "client/browser",
                "cloud/roleName",
                "cloud/roleInstance",
                "customDimensions/State",
                "customDimensions/Deployment",
                "customDimensions/InvocationId",
                "customDimensions/Category",
                "customDimensions/HostInstanceId",
                "customDimensions/LogLevel",
                "customDimensions/Queue",
                "customDimensions/QueueName"
              ],
              "metricName": "customEvents/custom/Busy",
              "rawQuery": true,
              "rawQueryString": "customEvents\r \n| where $__timeFilter(timestamp)\n| where name == 'QueueReport'\r\n| where tolower(tostring(customDimensions.Queue)) == '$QueueName'\n| project \r\n    timestamp, \r\n    QueueName = tolower(tostring(customDimensions.Queue)), \r\n//    Offline = toint(customMeasurements.Offline), \r\n//    Initializing = toint(customMeasurements.Initializing), \r\n//    Online = toint(customMeasurements.Online), \r\n    Busy = toint(customMeasurements.Busy)\n| summarize Busy = max(Busy) by bin(timestamp, $__interval)\n| order by timestamp asc",
              "segmentColumn": "QueueName",
              "timeColumn": "timestamp",
              "timeGrain": "auto",
              "valueColumn": "Busy"
            },
            "azureLogAnalytics": {
              "query": "//change this example to create your own time series query\n<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)\n| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here\n| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.\n| order by TimeGenerated asc",
              "resultFormat": "time_series",
              "workspace": "b165f541-bd03-4f8d-a509-8358194e2831"
            },
            "azureMonitor": {
              "aggOptions": [],
              "dimensionFilter": "*",
              "metricDefinition": "select",
              "metricName": "select",
              "metricNamespace": "select",
              "resourceGroup": "select",
              "resourceName": "select",
              "timeGrain": "auto",
              "timeGrains": []
            },
            "datasource": "AI - helix-autoscale-int",
            "hide": false,
            "queryType": "Application Insights",
            "refId": "A",
            "subscription": "68672ab8-de0c-40f1-8d1b-ffb20bd62c0f"
          },
          {
            "appInsights": {
              "aggOptions": [
                "avg",
                "min",
                "max",
                "sum",
                "count",
                "unique"
              ],
              "aggregation": "max",
              "dimension": "customDimensions/Queue",
              "dimensionFilter": "customDimensions/Queue eq '$QueueName'",
              "dimensions": [
                "customEvent/name",
                "operation/name",
                "operation/synthetic",
                "operation/syntheticSource",
                "user/authenticated",
                "application/version",
                "client/type",
                "client/model",
                "client/os",
                "client/city",
                "client/stateOrProvince",
                "client/countryOrRegion",
                "client/browser",
                "cloud/roleName",
                "cloud/roleInstance",
                "customDimensions/Deployment",
                "customDimensions/State",
                "customDimensions/InvocationId",
                "customDimensions/Category",
                "customDimensions/LogLevel",
                "customDimensions/HostInstanceId",
                "customDimensions/QueueName",
                "customDimensions/Queue"
              ],
              "metricName": "customEvents/custom/Online",
              "rawQuery": true,
              "rawQueryString": "customEvents\r \n| where $__timeFilter(timestamp)\n| where name == 'QueueReport'\r\n| where tolower(tostring(customDimensions.Queue)) == '$QueueName'\n| project \r\n    timestamp, \r\n    QueueName = tolower(tostring(customDimensions.Queue)), \r\n    Online = toint(customMeasurements.Online),\n    Busy = toint(customMeasurements.Busy)\n| summarize arg_max(Busy, Online) by bin(timestamp, $__interval)\n| project-away Busy\n| order by timestamp asc",
              "segmentColumn": "QueueName",
              "timeColumn": "timestamp",
              "timeGrain": "auto",
              "timeGrainCount": "",
              "timeGrainType": "auto",
              "timeGrainUnit": "",
              "valueColumn": "Online"
            },
            "azureLogAnalytics": {
              "query": "//change this example to create your own time series query\n<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)\n| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here\n| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.\n| order by TimeGenerated asc",
              "resultFormat": "time_series",
              "workspace": "b165f541-bd03-4f8d-a509-8358194e2831"
            },
            "azureMonitor": {
              "aggOptions": [],
              "dimensionFilter": "*",
              "metricDefinition": "select",
              "metricName": "select",
              "metricNamespace": "select",
              "resourceGroup": "select",
              "resourceName": "select",
              "timeGrain": "auto",
              "timeGrains": []
            },
            "datasource": "AI - helix-autoscale-int",
            "hide": false,
            "queryType": "Application Insights",
            "refId": "B",
            "subscription": "68672ab8-de0c-40f1-8d1b-ffb20bd62c0f"
          },
          {
            "appInsights": {
              "dimension": "none",
              "metricName": "select",
              "rawQuery": true,
              "rawQueryString": "customEvents\r \n| where $__timeFilter(timestamp)\n| where name == 'QueueReport'\r\n| where tolower(tostring(customDimensions.Queue)) == '$QueueName'\n| project \r\n    timestamp, \r\n    QueueName = tolower(tostring(customDimensions.Queue)), \r\n    Initializing = toint(customMeasurements.Initializing),\n    Busy = toint(customMeasurements.Busy)\n| summarize arg_max(Busy, Initializing) by bin(timestamp, $__interval)\n| project-away Busy\n| order by timestamp asc",
              "segmentColumn": "QueueName",
              "timeColumn": "timestamp",
              "timeGrain": "auto",
              "valueColumn": "Initializing"
            },
            "azureLogAnalytics": {
              "query": "//change this example to create your own time series query\n<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)\n| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here\n| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.\n| order by TimeGenerated asc",
              "resultFormat": "time_series",
              "workspace": "b165f541-bd03-4f8d-a509-8358194e2831"
            },
            "azureMonitor": {
              "aggOptions": [],
              "dimensionFilter": "*",
              "metricDefinition": "select",
              "metricName": "select",
              "metricNamespace": "select",
              "resourceGroup": "select",
              "resourceName": "select",
              "timeGrain": "auto",
              "timeGrains": []
            },
            "datasource": "AI - helix-autoscale-int",
            "hide": false,
            "queryType": "Application Insights",
            "refId": "C",
            "subscription": "68672ab8-de0c-40f1-8d1b-ffb20bd62c0f"
          },
          {
            "appInsights": {
              "dimension": "none",
              "metricName": "select",
              "rawQuery": true,
              "rawQueryString": "customEvents\r \n| where $__timeFilter(timestamp)\n| where name == 'AutoScaleReport'\r\n| where tolower(tostring(customDimensions.QueueName)) == '$QueueName'\n| project \r\n    timestamp, \r\n    QueueName = tolower(tostring(customDimensions.QueueName)), \r\n    ['Current Capacity']= toint(customMeasurements.CurrentCapacity)\n| summarize ['Current Capacity']= max(['Current Capacity']) by bin(timestamp, $__interval)\n| order by timestamp asc",
              "timeColumn": "timestamp",
              "timeGrain": "auto",
              "valueColumn": "Current Capacity"
            },
            "azureLogAnalytics": {
              "query": "//change this example to create your own time series query\n<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)\n| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here\n| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.\n| order by TimeGenerated asc",
              "resultFormat": "time_series",
              "workspace": "b165f541-bd03-4f8d-a509-8358194e2831"
            },
            "azureMonitor": {
              "aggOptions": [],
              "dimensionFilter": "*",
              "metricDefinition": "select",
              "metricName": "select",
              "metricNamespace": "select",
              "resourceGroup": "select",
              "resourceName": "select",
              "timeGrain": "auto",
              "timeGrains": []
            },
            "datasource": "AI - helix-autoscale-int",
            "hide": false,
            "queryType": "Application Insights",
            "refId": "D",
            "subscription": "68672ab8-de0c-40f1-8d1b-ffb20bd62c0f"
          },
          {
            "database": "engineeringdata",
            "datasource": "Kusto - engdata (Staging)",
            "hide": true,
            "query": "HeartbeatExport\n| where $__timeFilter(ExportTime)\n| where MachineState == 'Online'\n| where tolower(Queue) == $QueueName\n| summarize Online = count() by ExportTime\n| order by ExportTime asc",
            "refId": "E",
            "resultFormat": "time_series"
          },
          {
            "database": "engineeringdata",
            "datasource": "Kusto - engdata (Staging)",
            "hide": true,
            "query": "HeartbeatExport\n| where $__timeFilter(ExportTime)\n| where MachineState == 'Busy'\n| where tolower(Queue) == $QueueName\n| summarize Busy = count() by ExportTime\n| order by ExportTime asc",
            "refId": "F",
            "resultFormat": "time_series"
          },
          {
            "database": "engineeringdata",
            "datasource": "Kusto - engdata (Staging)",
            "hide": true,
            "query": "HeartbeatExport\n| where $__timeFilter(ExportTime)\n| where MachineState == 'Initializing'\n| where tolower(Queue) == $QueueName\n| summarize Initializing = count() by ExportTime\n| order by ExportTime asc",
            "refId": "G",
            "resultFormat": "time_series"
          },
          {
            "database": "engineeringdata",
            "datasource": "Kusto - engdata (Staging)",
            "hide": true,
            "query": "HeartbeatExport\n| where $__timeFilter(ExportTime)\n| where MachineState == 'Offline'\n| where tolower(Queue) == $QueueName\n| summarize Offline = count() by ExportTime\n| order by ExportTime asc",
            "refId": "H",
            "resultFormat": "time_series"
          }
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Machine Status",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "decimals": 0,
            "format": "short",
            "label": "",
            "logBase": 1,
            "max": null,
            "min": "0",
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": 5
        }
      }
    ],
    "refresh": "30s",
    "schemaVersion": 20,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": [
        {
          "allValue": null,
          "current": {
            "text": "buildpool.windows.10.amd64.open + buildpool.windows.10.amd64.vs2017 + buildpool.windows.10.amd64.vs2017.open + ubuntu.1604.arm64.docker.open + windows.10.amd64.open",
            "value": [
              "buildpool.windows.10.amd64.open",
              "buildpool.windows.10.amd64.vs2017",
              "buildpool.windows.10.amd64.vs2017.open",
              "ubuntu.1604.arm64.docker.open",
              "windows.10.amd64.open"
            ]
          },
          "datasource": "Kusto - engdata (Staging)",
          "definition": "Jobs | where Queued > ago(14d) | distinct QueueName | order by QueueName asc",
          "hide": 0,
          "includeAll": false,
          "label": null,
          "multi": true,
          "name": "QueueName",
          "options": [],
          "query": "Jobs | where Queued > ago(14d) | distinct QueueName | order by QueueName asc",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tags": [],
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        }
      ]
    },
    "time": {
      "from": "now-6h",
      "to": "now"
    },
    "timepicker": {
      "refresh_intervals": [
        "5s",
        "10s",
        "30s",
        "1m",
        "5m",
        "15m",
        "30m",
        "1h",
        "2h",
        "1d"
      ]
    },
    "timezone": "utc",
    "title": "Queue Monitor (Staging)",
    "uid": "83dI-D2Zz",
    "version": 1
  }
}